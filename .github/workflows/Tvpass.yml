name: Sync & Update Playlists

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */3 * * *"  # every 3 hours

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Add upstream and merge
        run: |
          git remote add upstream https://github.com/pigzillaaa/daddylive.git
          git fetch upstream
          git merge upstream/main --allow-unrelated-histories || true

      - name: Merge playlists and create per-channel backups
        run: |
          set -e
          python3 <<'PY'
import sys
from pathlib import Path

main_path = Path("playlist.m3u")

# Collect all .m3u files except the merged one
m3u_files = [p for p in Path(".").glob("*.m3u") if p.name != "playlist.m3u"]

lines = []
for f in m3u_files:
    with f.open() as fh:
        lines.extend(fh.readlines())

# Always rewrite playlist.m3u
with main_path.open("w") as out:
    if lines:
        out.writelines(lines)
    else:
        out.write("#EXTM3U\n")

# Build per-channel backup files
if lines:
    channel_map = {}
    for line in lines:
        if line.startswith("#EXTINF"):
            name = line.split(",")[-1].strip()
            channel_map[name] = []
        if channel_map:
            channel_map[name].append(line)

    backup_dir = Path("channels")
    backup_dir.mkdir(exist_ok=True)
    for name, content in channel_map.items():
        safe_name = "".join(c if c.isalnum() else "_" for c in name)
        with (backup_dir / f"{safe_name}.m3u").open("w") as ch_file:
            ch_file.writelines(content)
PY

      - name: Commit updated playlists
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          git add playlist.m3u channels/*.m3u || true

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update playlists & backups"
            git push
          fi
