name: Merge Playlists

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Merge playlists
        run: |
          set -euo pipefail
          # Create merged file with a single header
          printf '%s\n' '#EXTM3U' > daddylive-merged.m3u8
          # Append all playlist body content (skip their header if present)
          for f in *.m3u *.m3u8; do
            [ -f "$f" ] || continue
            [ "$f" = "daddylive-merged.m3u8" ] && continue
            awk 'NR==1 && /^#EXTM3U/ { next } { print }' "$f" >> daddylive-merged.m3u8 || true
          done

      - name: Fix M3U formatting (keep only EXTINF + next URL, remove blanks)
        run: |
          awk 'BEGIN{print "#EXTM3U"} /^#EXTINF:/{ext=$0; getline; url=$0; if(url ~ /^https?:/){print ext; print url}}' daddylive-merged.m3u8 > daddylive-merged.tmp && mv daddylive-merged.tmp daddylive-merged.m3u8

      - name: Show merged head (for debugging)
        run: |
          echo "=== merged file head ==="
          head -n 40 daddylive-merged.m3u8 || true

      - name: Commit & push (if changed)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add daddylive-merged.m3u8
          git diff --cached --quiet || (git commit -m "Auto-update merged M3U" && git push)

            - name: Cache
  uses: actions/cache@v4.2.4
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    enableCrossOsArchive: # optional, default is false
    # Fail the workflow if cache entry is not found
    fail-on-cache-miss: # optional, default is false
    # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    lookup-only: # optional, default is false
    # Run the post step to save the cache even if another step before fails
    save-always: # optional, default is false
          
